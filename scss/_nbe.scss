@import 'nbe_variables';

body {
   background: $bgColor;
   font-family: $fontFamilyLabel;
   color: $textColor;
}

a {
   color: $paletteC;
   text-decoration: none;
}

[data-ng-cloak] {
   display: none !important;
}

@mixin vertexPing() {

   $fromMiddle:   0 0  5px  3px $graphBgColor;
   $acrossMiddle: 0 0 12px  3px $graphBgColor;
   $toMiddle:     0 0 18px  3px $graphBgColor;

   $fromRing:     0 0  0    0 transparent;
   $acrossRing:   0 0 16px  3px $vertexBgColor;
   $toRing:       0 0 24px  3px transparent;

   $regularShadow: 4px 4px 4px $gray0;

   @keyframes vertex-ping {
      from { box-shadow: $fromMiddle, $fromRing, $regularShadow; }
      20% { box-shadow: $acrossMiddle, $acrossRing, $regularShadow; }
      to { box-shadow: $toMiddle, $toRing, $regularShadow; }
   }
}

@include vertexPing();


.graph {

   background: $graphBgColor;
   box-sizing: border-box;
   margin: 2px;

   .graph-contents {
      background:
      linear-gradient(
                      0deg,
                      transparent 24%, rgba(255, 255, 255, .05) 25%, rgba(255, 255, 255, .05) 26%, transparent 27%,
                      transparent 74%, rgba(255, 255, 255, .05) 75%, rgba(255, 255, 255, .05) 76%, transparent 77%,
                      transparent),
      linear-gradient(
                      90deg,
                      transparent 24%, rgba(255, 255, 255, .05) 25%, rgba(255, 255, 255, .05) 26%, transparent 27%,
                      transparent 74%, rgba(255, 255, 255, .05) 75%, rgba(255, 255, 255, .05) 76%, transparent 77%,
                      transparent);
      width: 100%;
      height: 100%;

   }

   &:focus {
      margin-top: 1px;
      margin-left: 1px;
      border: 1px dotted $paletteD;
      outline: none;
   }

   svg {
      width: 100%;
      height: 100%;
   }

   * {
      user-select: none;
      cursor: default;
   }

   .selection {
      border: 1px dashed rgb(244, 244, 192);
      background: rgba(244, 244, 192, 0.1);
      position: absolute;
      top: 10px;
      left: 10px;
      width: 100px;
      height: 100px;
   }

   .port {
      i {
         background: $typeColor1;
         border: solid $gray2 1px;
         display: inline-block;
         position: relative;
      }
      i:hover {
         border-color: $gray7;
      }
   }

   .node.nbe-edge .nbe-edge-icon.drop-hover,
   .vertex .drop-hover i {
      border-color: $gray7;
      box-shadow: 0 0 8px #fff, 4px 4px 4px $gray0;
   }

   .node.vertex .port.drop-hover {
      color: white;
      text-shadow: black 0 0 1px;
   }


   &.highlight-inbound {
      .ports.outbound i {
         background-color: $unHighlightColor;
      }
   }

   &.highlight-outbound {
      .ports.inbound i {
         background-color: $unHighlightColor;
      }
   }

   .vertex,
   .nbe-edge-icon {
      position: absolute;
      border: solid $nodeBorderColor 1.5px;
   }

   .vertex {
      box-shadow: 4px 4px 6px $shadowColor;

      border-radius: $vertexBorderRadius;
      background: linear-gradient(to right bottom, $vertexBgColor, darken($vertexBgColor, 30%));

      // Creation animation
      &.ping {
         animation-name: vertex-ping;
         animation-duration: 0.3s;
         animation-iteration-count: 1;
      }

      .header {
         border-radius: $vertexBorderRadius $vertexBorderRadius 0 0;
         text-align: center;
         background: rgba(0, 0, 0, 0.15);
         font-family: $fontFamilyLabel;
         text-shadow: 1px 1px 0.5px $gray2;
      }

      .port-group {
         background: rgba(0, 0, 0, 0.05);
         border-top: solid $nodeBorderColor 1px;

         // Flex container:
         display: -webkit-flex;
         -webkit-flex-direction: row;
         -webkit-align-items: flex-start;
      }

      .ports {
         // Flex item:
         flex: 0 1 auto;

         // Flex container:
         display: flex;
         flex-flow: column;
         justify-content: space-between;

         &.inbound {
            border-right: 1px solid $gray4;
            align-items: flex-start;
            .port { text-align: left; padding-right: 9px; }
         }

         &.outbound {
            align-items: flex-end;
            .port { text-align: right; padding-left: 9px; }
         }
      }

      .port {
         flex: 0 1 auto;
         padding-top: 0;
         color: $portTextColor;
         font-family: $fontFamilyPort;
         text-shadow: 0 0 2px $gray7;
         white-space: nowrap;
      }

   }

   .nbe-edge {
      display: block;
      width: $edgeNodeSize;
      height: $edgeNodeSize*2;
   }

   // Default edge-node style;
   .nbe-edge-icon {
      background: linear-gradient(135deg, $typeColor1 0%, darken($typeColor1, 20%) 100%);
   }

   .nbe-edge-label {
      position: relative;
      text-align: center;
      font-family: $fontFamilyLabel;
   }

   .nbe-edge.selected .nbe-edge-icon,
   .vertex.selected{
      box-shadow: 0 0 8px #fff, 4px 4px 4px $gray0;
   }


   .GHOST {
      position: absolute;
   }

   .link {
      position: absolute;
      fill: transparent;
   }

   .tools {
      position: absolute;
      top: 4px;
      left: 4px;

      button {
         opacity: 0.5;
         &:hover {
            opacity: 1;
         }
      }
   }
}
