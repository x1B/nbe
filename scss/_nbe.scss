@import 'nbe_variables';

body {
   background: $bgColor;
   font-family: $fontFamilyLabel;
   color: $textColor;
}

[data-ng-cloak] {
   display: none !important;
}

@mixin vertexPing() {

   $fromMiddle:   0px 0px  5px  3px $graphBgColor;
   $acrossMiddle: 0px 0px 12px  3px $graphBgColor;
   $toMiddle:     0px 0px 18px  3px $graphBgColor;

   $fromRing:     0px 0px  0px  0px transparent;
   $acrossRing:   0px 0px 16px  3px $vertexBgColor;
   $toRing:       0px 0px 24px  3px transparent;

   $regularShadow: 4px 4px 4px $gray0;

   @keyframes vertex-ping {
      from { box-shadow: $fromMiddle, $fromRing, $regularShadow; }
      20% { box-shadow: $acrossMiddle, $acrossRing, $regularShadow; }
      to { box-shadow: $toMiddle, $toRing, $regularShadow; }
   }

   @-webkit-keyframes vertex-ping {
      from { box-shadow: $fromMiddle, $fromRing, $regularShadow; }
      20% { box-shadow: $acrossMiddle, $acrossRing, $regularShadow; }
      to { box-shadow: $toMiddle, $toRing, $regularShadow; }
   }
}

@include vertexPing();


.graph {

   background: $graphBgColor;

   .graph-contents {
      background:
      linear-gradient(
                      0deg,
                      transparent 24%, rgba(255, 255, 255, .05) 25%, rgba(255, 255, 255, .05) 26%, transparent 27%,
                      transparent 74%, rgba(255, 255, 255, .05) 75%, rgba(255, 255, 255, .05) 76%, transparent 77%,
                      transparent),
      linear-gradient(
                      90deg,
                      transparent 24%, rgba(255, 255, 255, .05) 25%, rgba(255, 255, 255, .05) 26%, transparent 27%,
                      transparent 74%, rgba(255, 255, 255, .05) 75%, rgba(255, 255, 255, .05) 76%, transparent 77%,
                      transparent);
      background-size: 50px 50px;
      width: 100%;
      height: 100%;
   }

   svg {
      width: 100%;
      height: 100%;
   }

   * {
      user-select: none;
      -moz-user-select: none;
      -webkit-user-select: none;
      cursor: default;
   }

   .selection {
      border: 1px dashed rgb(244, 244, 192);
      background: rgba(244, 244, 192, 0.1);
      position: absolute;
      top: 10px;
      left: 10px;
      width: 100px;
      height: 100px;
   }

   .port {
      i {
         background: $typeColor1;
         border: solid $gray2 1px;
         display: inline-block;
         position: relative;
      }
      i:hover {
         opacity: 0.5;
      }
   }

   &.highlight-in {
      .ports.out .port i {
         background: $unHighlightColor;
      }
   }

   &.highlight-out {
      .ports.in .port i {
         background: $unHighlightColor;
      }
   }

   .node {
      position: absolute;
      border: solid $nodeBorderColor 1.5px;

      &.vertex {
         box-shadow: 4px 4px 6px $nodeShadowColor;

         border-radius: $vertexBorderRadius;
         background: -moz-linear-gradient(left top, $vertexBgColor 0%, darken($vertexBgColor, 30%) 100%);
         background: -webkit-gradient(linear, left top, right bottom, color-stop(0%, $vertexBgColor), color-stop(100%, darken($vertexBgColor, 30%)));

         // Creation animation
         &.ping {
            animation-name: vertex-ping;
            animation-duration: 0.3s;
            animation-iteration-count: 1;
            -webkit-animation-name: vertex-ping;
            -webkit-animation-duration: 0.4s;
            -webkit-animation-iteration-count: 1;
         }

         .header {
            border-radius: $vertexBorderRadius $vertexBorderRadius 0px 0px;
            text-align: center;
            background: rgba(0, 0, 0, 0.15);
            font-family: $fontFamilyLabel;
            text-shadow: 1px 1px 0.5px $gray2;
         }

         .port-group {
            background: rgba(0, 0, 0, 0.05);
            border-top: solid $nodeBorderColor 1px;

            // Flex container:
            display: -webkit-flex;
            -webkit-flex-direction: row;
            -webkit-align-items: flex-start;
         }

         .ports {
            // Flex item:
            -webkit-flex: 0 1 auto;

            // Flex container:
            display: -webkit-flex;
            -webkit-flex-flow: column;
            -webkit-justify-content: stretch;

            &.in {
               border-right: 1px solid $gray4;
               -webkit-align-items: flex-start;
               .port { text-align: left; padding-right: 9px; }
            }

            &.out {
               -webkit-align-items: flex-end;
               .port { text-align: right; padding-left: 9px; }
            }
         }

         .port {
            -webkit-flex: 0 1 auto;
            padding-top: 0;
            color: $portTextColor;
            font-family: $fontFamilyPort;
            text-shadow: 0 0 2px $gray7;
            white-space: nowrap;
         }

      }

      // Default edge-node style;
      &.edge {
         background: linear-gradient(135deg, $typeColor1 0%, darken($typeColor1, 20%) 100%);

         label {
            display: block;
            position: relative;
            width: 100px;
            left: -50px + $edgeNodeSize/2;
            text-align: center;
            text-shadow: 4px 4px 4px $gray0;
            top: $edgeNodeSize + 2px;
            font-family: $fontFamilyLabel;
            font-size: $fontSizeLabel;
         }
      }

      &.selected {
         box-shadow: 0px 0px 8px #fff, 4px 4px 4px $gray0;
      }
   }

   .GHOST {
      position: absolute;
   }

   .link {
      position: absolute;
      fill: transparent;
   }

   .tools {
      position: absolute;
      top: 4px;
      left: 4px;

      button {
         opacity: 0.5;
         &:hover {
            opacity: 1;
         }
      }
   }
}

